apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
android {
    compileSdkVersion versions.compile_sdk_version
    buildToolsVersion versions.build_tools_version

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    //项目用jvm1.6进行构建，而库用到1.8版本导致不兼容
    kotlinOptions { jvmTarget = 1.8}

    defaultConfig {
        minSdkVersion versions.min_sdk_version
        targetSdkVersion versions.target_sdk_version
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    resourcePrefix "${project.name}_" //给 Module 内的资源名增加前缀, 避免资源名冲突
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    api "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$versions.kotlin"
    api "androidx.appcompat:appcompat:$versions.androidx_appcompat"
    api "androidx.core:core-ktx:$versions.androidx_ktx"
    api "androidx.constraintlayout:constraintlayout:$versions.androidx_constraintlayout"
    api "com.google.android.material:material:$versions.material"
    api "androidx.concurrent:concurrent-futures:$versions.androidx_futures"
    api "androidx.lifecycle:lifecycle-extensions:$versions.androidx_lifecycle"

    api "androidx.vectordrawable:vectordrawable:$versions.androidx_vectordrawable"
    api "androidx.navigation:navigation-fragment:$versions.androidx_nav"
    api "androidx.navigation:navigation-ui:$versions.androidx_nav"
    api "androidx.lifecycle:lifecycle-extensions:$versions.androidx_nav"



    api "androidx.navigation:navigation-fragment-ktx:$versions.androidx_nav"
    api "androidx.navigation:navigation-ui-ktx:$versions.androidx_nav"
    api "androidx.paging:paging-runtime:$versions.androidx_paging"
    api "androidx.paging:paging-rxjava2:$versions.androidx_paging"
    api "androidx.room:room-runtime:$versions.androidx_room"
    // Kotlin + coroutines
    api "androidx.work:work-runtime-ktx:$versions.androidx_work"
    // optional - RxJava2 support
    api "androidx.work:work-rxjava2:$versions.androidx_work"
    // optional - GCMNetworkManager support
    api "androidx.work:work-gcm:$versions.androidx_work"

    annotationProcessor "androidx.room:room-compiler:$versions.androidx_room"

    testImplementation "junit:junit:$versions.test_junit"
    testImplementation "androidx.arch.core:core-testing:$versions.androidx_lifecycle"
    testImplementation "androidx.paging:paging-common:$versions.androidx_paging"
    testImplementation "androidx.room:room-testing:$versions.androidx_room"

    // optional - Test helpers
    annotationProcessor "androidx.lifecycle:lifecycle-compiler:$versions.androidx_lifecycle"
    androidTestImplementation "androidx.work:work-testing:$versions.androidx_work"
    androidTestImplementation "androidx.test.ext:junit:$versions.androidx_test_ext_junit"
    androidTestImplementation "androidx.test.espresso:espresso-core:$versions.androidx_test_espresso"

}
