apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

// 定义打包秘钥文件
def keystorePropertiesFile = rootProject.file("keystore.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    compileSdkVersion versions.compile_sdk_version
    buildToolsVersion versions.build_tools_version

    // Java8支持
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    signingConfigs {
        release {
            //获取打包秘钥内容
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }

    defaultConfig {
        applicationId "com.suromo.app_think"
        minSdkVersion versions.min_sdk_version
        targetSdkVersion versions.target_sdk_version
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            //更改AndroidManifest.xml中预先定义好占位符信息
            //manifestPlaceholders = [app_icon: "@drawable/icon"]
            // 不显示Log
            buildConfigField "boolean", "LEO_DEBUG", "false"

            //是否zip对齐
            zipAlignEnabled true

            // 缩减resource文件
            shrinkResources true

            //Proguard
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            //签名
            signingConfig signingConfigs.release
        }
        debug {
            //给applicationId添加后缀“.debug”
            applicationIdSuffix ".debug"

            //manifestPlaceholders = [app_icon: "@drawable/launch_beta"]
            buildConfigField "boolean", "LOG_DEBUG", "true"

            zipAlignEnabled false
            shrinkResources false
            minifyEnabled false
            debuggable true
        }
    }
    resourcePrefix "${project.name}_" //给 Module 内的资源名增加前缀, 避免资源名冲突
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation project(':module_common')
    //组合组件，形成项目
    if (isAssembled.toBoolean()) {
        implementation project(':module_main')
        implementation project(':module_home')
        implementation project(':module_user')
    }
}
